// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/rg-km/final-project-engineering-4/backend/domain (interfaces: PresensiRepository,PresensiUseCase)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
)

// MockPresensiRepository is a mock of PresensiRepository interface.
type MockPresensiRepository struct {
	ctrl     *gomock.Controller
	recorder *MockPresensiRepositoryMockRecorder
}

// MockPresensiRepositoryMockRecorder is the mock recorder for MockPresensiRepository.
type MockPresensiRepositoryMockRecorder struct {
	mock *MockPresensiRepository
}

// NewMockPresensiRepository creates a new mock instance.
func NewMockPresensiRepository(ctrl *gomock.Controller) *MockPresensiRepository {
	mock := &MockPresensiRepository{ctrl: ctrl}
	mock.recorder = &MockPresensiRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPresensiRepository) EXPECT() *MockPresensiRepositoryMockRecorder {
	return m.recorder
}

// MockPresensiUseCase is a mock of PresensiUseCase interface.
type MockPresensiUseCase struct {
	ctrl     *gomock.Controller
	recorder *MockPresensiUseCaseMockRecorder
}

// MockPresensiUseCaseMockRecorder is the mock recorder for MockPresensiUseCase.
type MockPresensiUseCaseMockRecorder struct {
	mock *MockPresensiUseCase
}

// NewMockPresensiUseCase creates a new mock instance.
func NewMockPresensiUseCase(ctrl *gomock.Controller) *MockPresensiUseCase {
	mock := &MockPresensiUseCase{ctrl: ctrl}
	mock.recorder = &MockPresensiUseCaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPresensiUseCase) EXPECT() *MockPresensiUseCaseMockRecorder {
	return m.recorder
}
