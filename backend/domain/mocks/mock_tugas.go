// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/rg-km/final-project-engineering-4/backend/domain (interfaces: TugasRepository,TugasUseCase)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
)

// MockTugasRepository is a mock of TugasRepository interface.
type MockTugasRepository struct {
	ctrl     *gomock.Controller
	recorder *MockTugasRepositoryMockRecorder
}

// MockTugasRepositoryMockRecorder is the mock recorder for MockTugasRepository.
type MockTugasRepositoryMockRecorder struct {
	mock *MockTugasRepository
}

// NewMockTugasRepository creates a new mock instance.
func NewMockTugasRepository(ctrl *gomock.Controller) *MockTugasRepository {
	mock := &MockTugasRepository{ctrl: ctrl}
	mock.recorder = &MockTugasRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTugasRepository) EXPECT() *MockTugasRepositoryMockRecorder {
	return m.recorder
}

// MockTugasUseCase is a mock of TugasUseCase interface.
type MockTugasUseCase struct {
	ctrl     *gomock.Controller
	recorder *MockTugasUseCaseMockRecorder
}

// MockTugasUseCaseMockRecorder is the mock recorder for MockTugasUseCase.
type MockTugasUseCaseMockRecorder struct {
	mock *MockTugasUseCase
}

// NewMockTugasUseCase creates a new mock instance.
func NewMockTugasUseCase(ctrl *gomock.Controller) *MockTugasUseCase {
	mock := &MockTugasUseCase{ctrl: ctrl}
	mock.recorder = &MockTugasUseCaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTugasUseCase) EXPECT() *MockTugasUseCaseMockRecorder {
	return m.recorder
}
